node n1 {
    type router
    model host
    network-config {
	hostname n13
	!
	interface eth0
	 ip address 80.0.92.3/23
	 ipv6 address 2001:dae1:0e3a:db01::3/58
	!
    }
    canvas c1
    iconcoords {111.0 101.0}
    labelcoords {111.0 133.0}
    interface-peer {eth0 n3}
}

node n2 {
    type router
    model host
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 80.0.92.2/23
	 ipv6 address 2001:dae1:0e3a:db01::2/58
	!
    }
    canvas c1
    iconcoords {242.0 111.0}
    labelcoords {242.0 143.0}
    interface-peer {eth0 n3}
}

node n3 {
    type lanswitch
    network-config {
	hostname n12
	!
    }
    canvas c1
    iconcoords {127.0 253.0}
    labelcoords {127.0 277.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n4}
}

node n4 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 80.0.92.1/23
	 ipv6 address 2001:dae1:0e3a:db01::1/58
	!
	interface eth2
	 ip address 80.0.90.2/31
	!
	interface eth1
	 ip address 80.0.90.0/31
	!
    }
    canvas c1
    iconcoords {133.0 380.0}
    labelcoords {133.0 412.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n5}
    interface-peer {eth2 n6}
    services {DefaultRoute IPForward}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 2001:dae1:e3a:db00::1
	ip route add default via 80.0.90.3
	
	}
    }
}

node n5 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth1
	 ip address 80.0.90.4/31
	!
	interface eth0
	 ip address 80.0.90.1/31
	!
    }
    canvas c1
    iconcoords {203.0 557.0}
    labelcoords {203.0 589.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add 80.0.92.0/23 via 80.0.90.0/31
	ip route add default via  80.0.90.5
	
	}
    }
    services {DefaultRoute IPForward}
}

node n6 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth3
	 ip address 80.0.90.16/31
	!
	interface eth4
	 ip address 80.0.90.12/31
	!
	interface eth2
	 ip address 80.0.90.8/31
	!
	interface eth0
	 ip address 80.0.90.5/31
	!
	interface eth1
	 ip address 80.0.90.3/31
	!
    }
    canvas c1
    iconcoords {341.0 382.0}
    labelcoords {341.0 414.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n4}
    interface-peer {eth2 n7}
    interface-peer {eth3 n10}
    interface-peer {eth4 n8}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add 80.0.92.0/23 via 80.0.90.2
	ip route add 80.0.88.128/25 via 80.0.90.9
	ip route add 80.0.94.0/23 via 80.0.90.13
	ip route add 80.0.89.0/26 via 80.0.90.13
	
	}
    }
    services {DefaultRoute IPForward}
}

node n7 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ip address 192.168.1.1/24
	!
	interface eth1
	 ip address 80.0.90.10/31
	!
	interface eth0
	 ip address 80.0.90.9/31
	!
    }
    canvas c1
    iconcoords {343.0 243.0}
    labelcoords {343.0 275.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n8}
    interface-peer {eth2 n15}
    custom-config {
	custom-config-id service:NAT
	custom-command NAT
	config {
	files=('nat.sh', )
	}
    }
    custom-config {
	custom-config-id service:NAT:nat.sh
	custom-command nat.sh
	config {
	#!/bin/sh
	# generated by security.py
	# NAT out the first interface by default
	# NAT out the eth0 interface
	#iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
	#iptables -A FORWARD -i eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT
	#iptables -A FORWARD -i eth0 -j DROP
	
	#iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	#iptables -A FORWARD -i eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
	#iptables -A FORWARD -i eth1 -j DROP
	#iptables -t nat -A POSTROUTING -o eth2 -j MASQUERADE
	#iptables -A FORWARD -i eth2 -m state --state RELATED,ESTABLISHED -j ACCEPT
	#iptables -A FORWARD -i eth2 -j DROP
	
	iptables -t nat -A POSTROUTING -o eth1 -j SNAT --to-source 80.0.88.130
	iptables -t nat -A POSTROUTING -o eth0 -j SNAT --to-source 80.0.88.130
	iptables -t nat -A PREROUTING -i eth1 -j DNAT --to 192.168.1.30
	iptables -t nat -A PREROUTING -i eth0 -j DNAT --to 192.168.1.30 
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add 80.0.92.0/23 via 80.0.90.8
	ip route add 80.0.94.0/23 via 80.0.90.11
	ip route add 80.0.89.0/26 via 80.0.90.11
	
	}
    }
    services {NAT DefaultRoute IPForward}
}

node n8 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth3
	 ip address 80.0.90.20/31
	 ipv6 address 2001:dae1:0e3a:db11::1/64
	!
	interface eth1
	 ip address 80.0.90.15/31
	!
	interface eth2
	 ip address 80.0.90.13/31
	!
	interface eth0
	 ip address 80.0.90.11/31
	!
    }
    canvas c1
    iconcoords {523.0 210.0}
    labelcoords {523.0 242.0}
    interface-peer {eth0 n7}
    interface-peer {eth1 n9}
    interface-peer {eth2 n6}
    interface-peer {eth3 n11}
    services {DefaultRoute IPForward}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add 80.0.92.0/23 via 80.0.90.12
	ip route add 80.0.88.128/25 via 80.0.90.10
	ip route add 80.0.94.0/23 via 80.0.90.21
	ip route add 80.0.89.0/26 via 80.0.90.21
	ip route add default via 2001:dae1:e3a:db11::1
	
	}
    }
}

node n9 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth1
	 ip address 80.0.90.19/31
	!
	interface eth0
	 ip address 80.0.90.14/31
	!
    }
    canvas c1
    iconcoords {516.0 392.0}
    labelcoords {516.0 424.0}
    interface-peer {eth0 n8}
    interface-peer {eth1 n10}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 80.0.90.15
	
	}
    }
    services {DefaultRoute IPForward}
}

node n10 {
    type router
    model router
    network-config {
	hostname n15
	!
	interface eth1
	 ip address 80.0.90.18/31
	!
	interface eth0
	 ip address 80.0.90.17/31
	!
    }
    canvas c1
    iconcoords {435.0 501.0}
    labelcoords {435.0 533.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n9}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add 80.0.92.0/23 via 80.0.90.16
	ip route add 80.0.88.128/25 via 80.0.90.16
	ip route add 80.0.94.0/23 via 80.0.90.19
	
	}
    }
    services {DefaultRoute IPForward}
}

node n11 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth1
	 ipv6 address 2001:dae1:0e3a:db12::1/64
	 ip address 80.0.90.22/31
	!
	interface eth0
	 ip address 80.0.90.21/31
	 ipv6 address 2001:dae1:0e3a:db11::2/64
	!
    }
    canvas c1
    iconcoords {716.0 238.0}
    labelcoords {716.0 270.0}
    interface-peer {eth0 n8}
    services {DefaultRoute IPForward}
    interface-peer {eth1 n12}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 80.0.90.20
	ip route add default via 2001:dae1:e3a:db11::1
	ip route add 80.0.94.0/23 via 80.0.90.23
	ip route add 80.0.89.0/26 via 80.0.90.23
	ip route add default via 2001:dae1:e3a:db12::1
	
	}
    }
}

node n12 {
    type router
    model router
    network-config {
	hostname n8
	!
	interface eth2
	 ipv6 address 2001:dae1:0e3a:db14::1/64
	 ip address 80.0.94.1/23
	!
	interface eth1
	 ipv6 address 2001:dae1:0e3a:db13::1/64
	 ip address 80.0.89.1/26
	!
	interface eth0
	 ipv6 address 2001:dae1:0e3a:db12::2/64
	 ip address 80.0.90.23/31
	!
    }
    canvas c1
    iconcoords {718.0 403.0}
    labelcoords {718.0 435.0}
    services {DefaultRoute IPForward}
    interface-peer {eth0 n11}
    interface-peer {eth1 n13}
    interface-peer {eth2 n14}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 80.0.90.22
	ip route add default via 2001:dae1:e3a:db12::1
	ip route add default via 2001:dae1:e3a:db13::1
	ip route add default via 2001:dae1:e3a:db14::1
	
	}
    }
}

node n13 {
    type router
    model host
    network-config {
	hostname n9
	!
	interface eth0
	 ipv6 address 2001:dae1:0e3a:db13::2/64
	 ip address 80.0.89.2/26
	!
    }
    canvas c1
    iconcoords {917.0 274.0}
    labelcoords {917.0 306.0}
    interface-peer {eth0 n12}
}

node n14 {
    type router
    model host
    network-config {
	hostname n14
	!
	interface eth0
	 ipv6 address 2001:dae1:0e3a:db14::2/64
	 ip address 80.0.94.2/23
	!
    }
    canvas c1
    iconcoords {905.0 592.0}
    labelcoords {905.0 624.0}
    interface-peer {eth0 n12}
}

node n15 {
    type router
    model host
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 192.168.1.30/24
	!
    }
    canvas c1
    iconcoords {342.0 98.0}
    labelcoords {342.0 130.0}
    interface-peer {eth0 n7}
}

link l1 {
    nodes {n1 n3}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l3 {
    nodes {n3 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n5}
    bandwidth 0
}

link l5 {
    nodes {n5 n6}
    bandwidth 0
}

link l6 {
    nodes {n4 n6}
    bandwidth 0
}

link l7 {
    nodes {n6 n7}
    bandwidth 0
}

link l8 {
    nodes {n7 n8}
    bandwidth 0
}

link l9 {
    nodes {n8 n9}
    bandwidth 0
}

link l10 {
    nodes {n6 n10}
    bandwidth 0
}

link l11 {
    nodes {n10 n9}
    bandwidth 0
}

link l12 {
    nodes {n6 n8}
    bandwidth 0
}

link l13 {
    nodes {n15 n7}
    bandwidth 0
}

link l14 {
    nodes {n8 n11}
    bandwidth 0
}

link l15 {
    nodes {n11 n12}
    bandwidth 0
}

link l16 {
    nodes {n12 n13}
    bandwidth 0
}

link l17 {
    nodes {n12 n14}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

